# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Home_Page.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from Main import MainWindow as Main_Main
from popup import Ui_popup
from PyQt5 import QtWidgets, uic
import os, sys
########################################################################
# IMPORT GUI FILE
########################################################################

dir_path = os.path.dirname(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
# print(dir_path)
sys.path.append(dir_path)
from require.Write_Data import WriteData
########################################################################

class Ui(QtWidgets.QMainWindow):
    def __init__(self):
        super(Ui, self).__init__()
        uic.loadUi('{}/require/GUI/Ui_files/Home_Page.ui'.format(dir_path), self)
        self.username = self.findChild(QtWidgets.QLineEdit, 'username')
        self.password = self.findChild(QtWidgets.QLineEdit, 'password')
        self.syslog = self.findChild(QtWidgets.QLineEdit, 'syslog')
        self.button = self.findChild(QtWidgets.QPushButton, 'login')
        self.button.clicked.connect(self.openWindow)
        self.show()
        # MainWindow.show()
        
        

    def openWindow(self):
        uss = self.username.text()
        pss = self.password.text()
        print(uss,pss)
        sys_log = self.syslog.text()
        data = {'super_user' : self.username.text(), 'super_pass' : self.password.text(),
                'syslog_path' : self.syslog.text()}
        self.window = QtWidgets.QMainWindow()
        # self.ui(self.window)
        if uss == 'root':
            if pss == 'root':
                self.ui = Main_Main()
                
                # self.window.show()
                window.hide()
            else:
                self.window = QtWidgets.QMainWindow()
                self.ui = Ui_popup()
                self.ui.setupUi(self.window)
                self.window.show()
                return False
        else:
            self.window = QtWidgets.QMainWindow()
            self.ui = Ui_popup()
            self.ui.setupUi(self.window)
            self.window.show()
            return False
        WriteData(data,'{}/Conformance/inputs.ini'.format(dir_path))
        return True

if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv) # Create an instance of QtWidgets.QApplication
    window = Ui() # Create an instance of our class
    app.exec_() # Start the application